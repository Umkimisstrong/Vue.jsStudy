-- ■ Component

-- 1. 개요
      - Vue.js 는 컴포넌트를 조합해 전체 애플리케이션을 작성
      - 컴포넌트들은 부모-자식 관계로 트리 구조를 형성
      - 부모 컴포넌트가 자식 컴포넌트를 포함하는 형태
      - 컴포넌트들은 속성(Props)을 통해서 자식 컴포넌트로 정보를 전달할 수 있음
      - 전달 방향은 주로 부모에서 자식으로만 향함(단방향)
      - 양방향으로 데이터를 전달하는 것은 애플리케이션의 복잡도가 높아지고 유지보수에 어려움이 있어서
        권장하지 않음


	                     [컴포넌트]				↑ 부모
			    /	       \
		  [컴포넌트]	        [컴포넌트]		
        	    /   \                 /    \
	    [컴포넌트]  [컴포넌트]  [컴포넌트] [컴포넌트]	↓ 자식
 
      - 부모 컴포넌트는 자식 컴포넌트로 속성을 전달한다.  
      - 자식 컴포넌트는 부모 컴포넌트로 이벤트를 발신할 수 있다.

-- 2. 특징
      - data, methods, computed, watch 옵션과 같은 대부분의 Vue 인스턴스의 옵션을
	컴포넌트의 수준에서도 사용할 수 있음
      - 주의할 사항은 data 옵션
      - 컴포너트 기반으로 개발할 때 data 옵션은 각 컴포넌트의 로컬 상태(Local State)를 관리하기 위한
	용도로만 사용
      - 하나의 컴포넌트를 애플리케이션에서 여러 번 사용할 경우에 모두 다른 상태 정보를 가져야 함
      - 따라서 data 옵션을 단순한 객체 값으로 작성할 수 없음
	(단순한 객체 값으로 작성하는 경우 객체가 참조형 값이므로 모두 동일한 값을 참조하게 되기 때문)
      - 반드시 data 옵션은 함수로 작성하고 내부에서 객체를 리턴하도록 작성

-- 3. 컴포넌트 작성
      - 기본 구문
	Vue.component(tagname, options)
	tagname : 컴포넌트를 사용할 태그명
		  * 태그명은 가능한 케밥 표기법(kebob casing) 을 따르는 것이 좋다.
		    ex) my-component
		    태그명은 대소문자를 구별하지 않기 때문에 파스칼 표기법(pascal casing)이나
                    카멜 표기법(camel casing)은 적절하지 않다.
	options : 컴포넌트에서 렌더링할 templet 등을 지정

	
	           

